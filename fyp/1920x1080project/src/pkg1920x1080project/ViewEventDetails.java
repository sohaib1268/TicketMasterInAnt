/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkg1920x1080project;

import java.sql.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static pkg1920x1080project.EventsPage.SelectedEvent;
import static pkg1920x1080project.LogInPage.LoggedInUsername;


/**
 *
 * @author Sohaib Ali
 */
public class ViewEventDetails extends javax.swing.JFrame {


    /**
     * Creates new form ViewEventDetails
     */
    
    public ViewEventDetails() throws SQLException {
        initComponents();
        
        setValues();
    }
    
    public void setValues() throws SQLException
    {
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
        String sql = "Select * from `scd_db`.`Event` where `scd_db`.`Event`.`Name` = ?";
        
        PreparedStatement ps =con.prepareStatement(sql);  
        
        String name = SelectedEvent;
        ps.setString(1, name);
            
        ResultSet rs = ps.executeQuery();
        rs.next();
        
        
        eventnamelabel.setText(rs.getString("Name"));
        locationlabel.setText(rs.getString("Location"));
        datelabel.setText(rs.getString("Date"));
        //timelabel.setText();
        pricelabel.setText(rs.getString("TicketPrice"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventnamelabel = new javax.swing.JLabel();
        locationlabel = new javax.swing.JLabel();
        datelabel = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        noofticketslabel = new javax.swing.JLabel();
        pricelabel = new javax.swing.JLabel();
        nooftickets = new javax.swing.JSpinner();
        bookbtn = new javax.swing.JButton();
        returnbtn = new javax.swing.JButton();
        backgroundlabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        eventnamelabel.setText("EVENT NAME LABEL");
        getContentPane().add(eventnamelabel);
        eventnamelabel.setBounds(630, 20, 190, 40);

        locationlabel.setText("LOCATION LABEL");
        getContentPane().add(locationlabel);
        locationlabel.setBounds(630, 80, 140, 30);

        datelabel.setText("DATE LABEL");
        getContentPane().add(datelabel);
        datelabel.setBounds(630, 140, 100, 16);

        timelabel.setText("TIME LABEL");
        getContentPane().add(timelabel);
        timelabel.setBounds(630, 190, 100, 16);

        noofticketslabel.setText("TICKETS?");
        getContentPane().add(noofticketslabel);
        noofticketslabel.setBounds(580, 300, 50, 30);

        pricelabel.setText("PRICE LABEL");
        getContentPane().add(pricelabel);
        pricelabel.setBounds(630, 240, 90, 16);

        nooftickets.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(nooftickets);
        nooftickets.setBounds(650, 300, 64, 30);

        bookbtn.setText("BOOK");
        bookbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookbtnActionPerformed(evt);
            }
        });
        getContentPane().add(bookbtn);
        bookbtn.setBounds(560, 370, 90, 23);

        returnbtn.setText("RETURN");
        returnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbtnActionPerformed(evt);
            }
        });
        getContentPane().add(returnbtn);
        returnbtn.setBounds(730, 370, 90, 23);

        backgroundlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vieweventdetails1366x768.png"))); // NOI18N
        getContentPane().add(backgroundlabel);
        backgroundlabel.setBounds(0, 0, 1370, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String setEventID()
    {
             try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
                String sql = "Select `scd_db`.`Event`.`EventID` from `scd_db`.`Event` where `scd_db`.`Event`.`Name` = ?";  
                PreparedStatement ps =con.prepareStatement(sql);
                
                String name = SelectedEvent;
                ps.setString(1, name);

                ResultSet rs = ps.executeQuery();
                rs.next();
                
                String EventID = rs.getString("EventID");
                
                return EventID;
                //con.close();
                
                
            } catch (SQLException ex) {
                Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        return null;
    }
    
    private String setCustomerID()
    {
        try {
                Connection con2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
                String sql = "Select `scd_db`.`Customer`.`CustomerID` from `scd_db`.`Customer` where `scd_db`.`Customer`.`Name` = ?";  
                PreparedStatement ps =con2.prepareStatement(sql);
                
                String name = LoggedInUsername;
                ps.setString(1, name);

                ResultSet rs1 = ps.executeQuery();
                rs1.next();
                
                String CustomerID = rs1.getString("CustomerID");
                System.out.println(CustomerID);
                
                return CustomerID;
            } catch (SQLException ex) {
                Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        return null;
     }
    
    
    
    public boolean TicketsAvailability(int tickets) throws SQLException
    {
        Connection con2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
        String sql = "Select * from `scd_db`.`Event` where `scd_db`.`Event`.`Name` = ?";  
        PreparedStatement ps =con2.prepareStatement(sql);
        
        String name = SelectedEvent;
        ps.setString(1, name);

        ResultSet rs = ps.executeQuery();
        rs.next();
                
        int MaxCapacity = rs.getInt("MaxCapacity");
        int CurrentBookings = rs.getInt("CurrentBookings");
        
        if(tickets + CurrentBookings <= MaxCapacity)
        {
        //    updateCurrentBookings(tickets);
            return true;
        }
        else
        {
            
            JOptionPane.showMessageDialog(null, "You Cannot Book " + tickets + " tickets as only " + (MaxCapacity - CurrentBookings) + " are left");
            return false;
        }
    }
    
    private void bookbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookbtnActionPerformed
        // TODO add your handling code here:
        
        
        int tickets = (int) nooftickets.getValue();
        boolean available;
        try {
            available = TicketsAvailability(tickets);
            
            if(available == false)
            {
                return;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        {
            try {
                String CustomerID = setCustomerID();
                
                Connection con2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
                String sql = "Select * from  `scd_db`.`EventCart` where `scd_db`.`EventCart`.`CustomerID` = ? ";
                PreparedStatement ps =con2.prepareStatement(sql);
                
                ps.setString(1, CustomerID);
                
                ResultSet rs = ps.executeQuery();
                
                
                String EventID = setEventID();
                while(rs.next())
                {
                    
                    if(EventID.equals(rs.getString("EventID")))
                    {
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");
                        String sql1 = "Update `scd_db`.`EventCart` set `scd_db`.`EventCart`.`EventQuantity` = ? where  `scd_db`.`EventCart`.`EventID` = ?";
                        PreparedStatement ps1 =con.prepareStatement(sql1);
                        
                        int EventQuantity = rs.getInt("EventQuantity");
                        int UpdatedEventQuantity = EventQuantity + tickets;
                        ps1.setInt(1, UpdatedEventQuantity);
                        ps1.setString(2, EventID);
                        
                        
                        ps1.executeUpdate();
                        
                        
                        this.dispose();
                        mycartpage cp = new mycartpage();
                        cp.setVisible(true);
                        
                        
                        return;
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                
            }
        
      
        
        String EventID = setEventID();;
        String CustomerID = setCustomerID();
        
        
        System.out.println("Event ID : " + EventID);
        System.out.println("CustomerID : " + CustomerID);
        
        
        Connection con;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/scd_db", "root", "123456");        
            String sql = "INSERT INTO `scd_db`.`EventCart` VALUES(?, ?, ?);";
            PreparedStatement ps =con.prepareStatement(sql);  
            
            ps.setString(1, CustomerID);
            ps.setString(2, EventID);
            ps.setInt(3, tickets );
            
            ps.executeUpdate();
            
            this.dispose();
            mycartpage CP = new mycartpage();
            CP.setVisible(true);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookbtnActionPerformed

    private void returnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbtnActionPerformed
        try {
            // TODO add your handling code here:
            eventspage = new EventsPage();
        } catch (SQLException ex) {
            Logger.getLogger(ViewEventDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        eventspage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEventDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEventDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEventDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEventDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
        //        new ViewEventDetails().setVisible(true);
            }
        });
    }
    
    
    private EventsPage eventspage;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundlabel;
    private javax.swing.JButton bookbtn;
    private javax.swing.JLabel datelabel;
    private javax.swing.JLabel eventnamelabel;
    private javax.swing.JLabel locationlabel;
    private javax.swing.JSpinner nooftickets;
    private javax.swing.JLabel noofticketslabel;
    private javax.swing.JLabel pricelabel;
    private javax.swing.JButton returnbtn;
    private javax.swing.JLabel timelabel;
    // End of variables declaration//GEN-END:variables
}
